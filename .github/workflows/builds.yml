name: Build

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-unix:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        nimversion:
          - binary:stable

        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact: linux-x64

          - os: macos-latest
            artifact: darwin-x64

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Nim
      uses: iffy/install-nim@v4
      with:
        version: ${{ matrix.nimversion }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check package validity
      run: nimble check

    - name: Build
      run: nimble build -d:release --accept

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact }}
        path: mcsrvstat


  dll:
    runs-on: ubuntu-latest
    steps:
      - name: Download DLLs
        uses: wei/curl@master
        with:
          args: https://nim-lang.org/download/dlls.zip --output dlls.zip

      - name: Unzip
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq dlls.zip

      - name: Upload DLLs artifact
        uses: actions/upload-artifact@v3
        with:
          name: dlls
          path: |
            cacert.pem
            libcrypto-1_1.dll
            libcrypto-1_1-x64.dll
            sqlite3_32.dll
            sqlite3_64.dll
            libssl-1_1.dll
            libssl-1_1-x64.dll


  build-windows:
    name: windows-latest

    runs-on: windows-latest
    needs: dll

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Nim
      uses: iffy/install-nim@v4
      with:
        version: binary:stable
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check package validity
      run: nimble check

    - name: Download DLLs artifacts
      uses: actions/download-artifact@v3
      with:
        name: dlls

    - name: Unzip DLLs
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq dlls.zip

    - name: LS (tests)
      run: ls

    - name: Build
      run: nimble build -d:release --accept

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: win-x64
        path: |
          mcsrvstat.exe
          cacert.pem
          libcrypto-1_1.dll
          libcrypto-1_1-x64.dll
          sqlite3_32.dll
          sqlite3_64.dll
          libssl-1_1.dll
          libssl-1_1-x64.dll
